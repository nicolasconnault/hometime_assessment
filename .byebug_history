c
reservation_params_with_guest
reservation_params
c
reservation.errors.full_messages
reservation.errors
n
c
n
c
e.record
e.inspect
e.cause
e.backtrace
e.methods
@payload
e
c
service
n
schema_validator
c
payload
JSON::Validator.validate(schema_file, payload)
JSON::Validator.fully_validate(schema_file, payload)
c
response
c
cv
c
payload
c
payload[:reservation]
payload['reservation']
payload
c
payload
c
JSON.parse(response.body)['message']
response.body
response
c
JSON::Validator.fully_validate(schema_file, payload)
c
JSON::Validator.fully_validate(schema_file, payload)
c
JSON::Validator.fully_validate(schema_file, payload)
c
schema_file
payload
JSON::Validator.fully_validate(schema_file, payload)
JSON::Validator.validate(schema_file, payload)
@schema
c
@schema
JSON::Validator.validate(schema_file, payload)
JSON::Validator.fully_validate(schema_file, payload)
c
JSON::Validator.fully_validate(schema_file, payload)
c
JSON::Validator.fully_validate(schema_file, payload)
JSON::Validator.methods
JSON::Validator.validate(schema_file, payload)
@schema
c
payload
schema_validator.schema
service
c
n
c
reservation_params
self.reservation_params
self.class
payload
reservation_params
guest_params
reservation_params
guest
c
n
schema_validator.schema
c
File.basename(schema_file, '.json')
File.basename(schema_file)
schema_file
c
schema_validator.valid?
schema_validator.schema
c
schema
c
JSON::Validator.fully_validate(schema_file, payload, version: :draft4)
c
JSON::Validator.fully_validate(schema_file, payload, version: :draft7)
JSON::Validator.fully_validate(schema_file, payload)
c
payload
schema
