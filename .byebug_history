c
@guest.guest_phone_numbers.last.errors
@guest.guest_phone_numbers.first.errors
@guest.guest_phone_numbers.first
@guest.guest_phone_numbers.errors
@guest.guest_phone_numbers
@guest.guest_phone_numbers.save!
@guest.guest_phone_numbers.save_all
@guest.guest_phone_numbers
@guest
@guest.save!
@reservation.save
valid?
@guest.save
@phone_numbers_for_save
@reservation
@guest
c
service
n
mapper_klass
n
schema_validator.valid?
c
payload_schema_2.to_json
payload_schema_2
payload_schema2
response
c
valid?
@phone_numbers_for_save.all?(&:valid?)
c
@phone_numbers_for_save.all?(&:valid?)
@phone_numbers_for_save
@reservation.valid?
@reservation
mapper.guest_email
mapper.guest_attributes
valid?
c
JSON.parse mapper.payload
mapper.payload.to_h
mapper.payload['guest']
mapper.guest_attributes
mapper
mapper.payload
payload
mapper.guest_email
mapper
guest
@guest.valid?
@guest
valid?
c
service.execute
service
n
service
n
mapper_klass
n
schema_validator.valid?
c
schema_validator.valid?
schema_validator = SchemaValidator.new(params.to_json, 'reservations')
params.to_json
params.to_h
params.permit!
params
c
params[:reservation_code]
params
c
reservation_params_with_guest
reservation_params
c
reservation.errors.full_messages
reservation.errors
n
c
n
c
e.record
e.inspect
e.cause
e.backtrace
e.methods
@payload
e
c
service
n
schema_validator
c
payload
JSON::Validator.validate(schema_file, payload)
JSON::Validator.fully_validate(schema_file, payload)
c
response
c
cv
c
payload
c
payload[:reservation]
payload['reservation']
payload
c
payload
c
JSON.parse(response.body)['message']
response.body
response
c
JSON::Validator.fully_validate(schema_file, payload)
c
JSON::Validator.fully_validate(schema_file, payload)
c
JSON::Validator.fully_validate(schema_file, payload)
c
schema_file
payload
JSON::Validator.fully_validate(schema_file, payload)
JSON::Validator.validate(schema_file, payload)
@schema
c
@schema
JSON::Validator.validate(schema_file, payload)
JSON::Validator.fully_validate(schema_file, payload)
c
JSON::Validator.fully_validate(schema_file, payload)
c
JSON::Validator.fully_validate(schema_file, payload)
JSON::Validator.methods
JSON::Validator.validate(schema_file, payload)
@schema
c
payload
schema_validator.schema
service
c
n
c
reservation_params
self.reservation_params
self.class
payload
reservation_params
guest_params
reservation_params
guest
c
n
schema_validator.schema
c
File.basename(schema_file, '.json')
File.basename(schema_file)
schema_file
c
schema_validator.valid?
schema_validator.schema
c
schema
c
JSON::Validator.fully_validate(schema_file, payload, version: :draft4)
c
JSON::Validator.fully_validate(schema_file, payload, version: :draft7)
JSON::Validator.fully_validate(schema_file, payload)
c
payload
schema
